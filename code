
class Board
    {
        char[,] board;
        bool flag;
        public Board()
        {
            flag = true;
            board = new char[,]
                {
                {'.','.','.' },
                {'.','.','.' },
                {'.','.','.' }
                };
        }
        public char[,] Mape() => board;
        public void Move(sbyte x, sbyte y)
        {
            if (x < 0 || y < 0 || x > 2 || y > 2 || board[x, y] != '.') return;
            board[x, y] = flag ? 'X' : 'Y';
            flag = !flag;
        }
        public bool IsWin(out char winner)
        {
            string str = default;
            winner = flag == true ? 'Y' : 'X';
            str = String.Join("", board[0, 0], board[1, 1], board[2, 2]);
            if (str.Equals("XXX") || str.Equals("YYY")) return false;
            str = String.Join("", board[2, 0], board[1, 1], board[0, 2]);
            if (str.Equals("XXX") || str.Equals("YYY")) return false;
            for (int i = 0; i < board.GetLength(0); i++)
            {
                str = String.Join("",board[i, 0],board[i, 1],board[i, 2]);
                if (str.Equals("XXX") || str.Equals("YYY")) return false;
                str = String.Join("", board[0, i], board[1, i], board[2, i]);
                if (str.Equals("XXX") || str.Equals("YYY")) return false;
            }
            return true;
        }
    }
    class Program
    {
        static void Main()
        {
            Board board = new Board();
            char winner = default;
            while (board.IsWin(out winner))
            {
                Console.Write("Input Y:");
                sbyte.TryParse(Console.ReadLine(), out sbyte y);
                Console.Write("Input X:");
                sbyte.TryParse(Console.ReadLine(), out sbyte x);
                board.Move(x, y);
                MapDraw(board.Mape());
            }
            Console.WriteLine($"\nWinner is - {winner}");
        }
        static void MapDraw(char[,] board)
        {
            for (int i = 0; i < board.GetLength(0); i++)
            {
                for (int j = 0; j < board.GetLength(1); j++)
                {
                    Console.Write($"{board[i, j]} ");
                }
                Console.WriteLine();
            }
        }
    }
